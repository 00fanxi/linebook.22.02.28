코딩 애플 part2 AJAX

(8강)

	삭제 요청

DELETE 요청을 사용하는것이 좋다.
하지만 HTML상에서는 DELETE와 PUT요청을 사용할 수 없다.

	해결 방법
1.method-override 라이브러리 이용 (Node.js에서 사용. form에서 DELETE요청이 가능해짐)
2.Javascript AJAX를 이용(서버를 만들때 꼭 사용함)

	AJAX란
새로고침 없이 서버에 요청하는걸 도와주는 JS문법.
서버랑 통신할 수 있게 도와주는 JS문법

	JQuery를 이용한 AJAX

CDN 방식 : <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>

	하단에 $.ajax : ajax함수
	<script>
		
		$.ajax({
			method : 'DELETE',
			url : '요청할 경로',
			data : '요청과 함께 보낼 데이터'
		})
		
	</script>

	
	<script>
		
		$.ajax({
			method : 'DELETE',
			url : '/delete',
			data : '게시물번호'
		}).done(function(result){
			요청이 성공하면 할거
		}).fail(function(err){
			실패시 할거
		});
		
	</script>

	서버측

app.delete('/delete',function(req,res){
	console.log(req.body) ---> 요청받은 데이터
}); 

(9강)
Ajax로 삭제요청하기2

	deleteOne({ query문 }, function(err , result){ })


	데이터를 주고 받을 때 숫자가 문자로 치환되는 경우가 있음

parseInt( ) : 문자를 정수로 변환. 
	
app.delete('/delete',function(req,res){
	console.log(req.body);
	req.body._id = parseInt(req.body._id);
	db.collection('post').deleteOne(req.body,function(err,result){
		console.log('삭제완료')
	});
}); 

	버튼에 이벤트 연동

$('.delete').click(function(){
			
})	

클래스가 delete인 요소를 클릭하면 내부 코드를 실행


	X번 버튼 누를 시 X번 게시물 삭제

1.버튼마다 번호달기
<button>태그에 data-id로 db의 아이디 부여.
<%= posts[i]._id %>

2.클릭한 버튼의 id를 파악

$('.delete').click(function(e){
	var 글번호 = e.target.dataset.id;  ---> e.target = 내가 누른 요소 .dataset.id = 해당 요소의 data-id값
			
	$.ajax({
		method : 'DELETE',
		url : '/delete',
		data : {_id :글번호}
	}).done(function(result){

	});
			
});

	AJAX는 새로고침 없이 서버에게 요청하는거.

=> 클라이언트가 성공했는지 모름

해결방법

1.AJAX성공시 페이지 강제 새로고침
2.삭제버튼을 누른 <li> 요소를 제거/안보이게(눈속임)

















	










